{"version":3,"sources":["App.js","index.js","trash.svg"],"names":["ListItem","props","className","itemData","isComplete","onClick","markComplete","index","description","src","trash","alt","deleteTask","App","useState","taskInput","updateTaskInput","toDoList","updateToDOList","addNote","length","push","splice","filter","item","i","list","role","aria-label","value","onKeyDown","event","keyCode","onChange","target","map","toDoObject","key","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"iOA8DA,SAASA,EAASC,GAAQ,IAAD,EACrB,OACI,yBAAKC,UAAU,kCACX,0BAAMA,UAAWD,EAAME,SAASC,WAAa,gBAAkB,GACzDC,QAAS,kBAAMJ,EAAMK,aAAaL,EAAMM,SAASN,EAAME,SAASC,WAAf,UAAmC,GAD1F,iBACoGH,EAAME,gBAD1G,aACoG,EAAgBK,aACpH,yBAAKN,UAAU,cAAcO,IAAKC,IAAOC,IAAI,cACxCN,QAAS,kBAAMJ,EAAMW,WAAWX,EAAMM,WAKxCM,MAtEf,WAAgB,IAAD,EAC0BC,mBAAS,IADnC,mBACJC,EADI,KACOC,EADP,OAEwBF,mBAAS,IAFjC,mBAEJG,EAFI,KAEMC,EAFN,KAcLC,EAAU,WACPJ,GAAcA,EAAUK,SAE7BH,EAASI,KATF,CACHb,YAQwBO,EAPxBX,YAOmC,IACvCc,EAAeD,GACfD,EAAgB,MAGdJ,EAAa,SAACL,GAChB,IAAIe,EAASL,EAASM,QAAO,SAACC,EAAMC,GAAP,OAAaA,IAAMlB,KAChDW,EAAeI,IAGbhB,EAAe,SAACC,GAClB,IAAMmB,EAAI,YAAOT,GACjBS,EAAKnB,GAAOH,YAAcsB,EAAKnB,GAAOH,WACtCc,EAAeQ,IAGnB,OACI,yBAAKxB,UAAU,kBACX,uBAAGA,UAAU,gBAAb,oBAA6C,0BAAMyB,KAAK,MAAMC,aAAW,SAA5B,iBAC7C,yBAAK1B,UAAU,yBACX,yBAAKA,UAAU,OACX,2BACIA,UAAU,aACV2B,MAAOd,EACPe,UArCC,SAACC,GACI,KAAlBA,EAAMC,SAAgBb,KAqCVc,SAAU,SAACF,GAAD,OAAWf,EAAgBe,EAAMG,OAAOL,UAEtD,4BAAQ3B,UAAU,aAAaG,QAASc,GAAxC,SAIK,OAARF,QAAQ,IAARA,OAAA,EAAAA,EAAUG,QACPH,EAASkB,KAAI,SAACC,EAAY7B,GAAb,OACT,kBAACP,EAAD,CAAUqC,IAAK9B,EAAOJ,SAAUiC,EAAY9B,aAAcA,EAChDC,MAAOA,EAAOK,WAAYA,OACxC,uBAAGV,UAAU,gBAAe,0BAAMyB,KAAK,MAAMC,aAAW,SAA5B,gBAA5B,yBAER,uBAAG1B,UAAU,eAAb,eCpDZoC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U,kBCT1BC,EAAOC,QAAU,IAA0B,mC","file":"static/js/main.561009be.chunk.js","sourcesContent":["import React, {useState} from \"react\";\r\nimport trash from './trash.svg'\r\n\r\nfunction App() {\r\n    const [taskInput, updateTaskInput] = useState(\"\");\r\n    const [toDoList, updateToDOList] = useState([]);\r\n\r\n    const inputKeyDown = (event) => {\r\n        if (event.keyCode === 13) addNote();\r\n    };\r\n    const getTaskObject = (description, isComplete) => {\r\n        return {\r\n            description,\r\n            isComplete\r\n        }\r\n    }\r\n\r\n    const addNote = () => {\r\n        if (!taskInput || !taskInput.length)\r\n            return;\r\n        toDoList.push(getTaskObject(taskInput, false));\r\n        updateToDOList(toDoList);\r\n        updateTaskInput(\"\")\r\n    };\r\n\r\n    const deleteTask = (index) => {\r\n        let splice = toDoList.filter((item, i) => i !== index);\r\n        updateToDOList(splice);\r\n    }\r\n\r\n    const markComplete = (index) => {\r\n        const list = [...toDoList]\r\n        list[index].isComplete = !list[index].isComplete\r\n        updateToDOList(list)\r\n    }\r\n\r\n    return (\r\n        <div className=\"app-background\">\r\n            <p className=\"heading-text\">React To Do List <span role=\"img\" aria-label=\"react\">ðŸ”¥</span></p>\r\n            <div className=\"task-container column\">\r\n                <div className=\"row\">\r\n                    <input\r\n                        className=\"text-input\"\r\n                        value={taskInput}\r\n                        onKeyDown={inputKeyDown}\r\n                        onChange={(event) => updateTaskInput(event.target.value)}\r\n                    />\r\n                    <button className=\"add-button\" onClick={addNote}>\r\n                        ADD\r\n                    </button>\r\n                </div>\r\n                {toDoList?.length ?\r\n                    toDoList.map((toDoObject, index) =>\r\n                        <ListItem key={index} itemData={toDoObject} markComplete={markComplete}\r\n                                  index={index} deleteTask={deleteTask}/>) :\r\n                    <p className=\"no-item-text\"><span role=\"img\" aria-label=\"react\">ðŸ“Œ</span> &nbsp;No Task Added !</p>}\r\n            </div>\r\n            <p className=\"footer-text\">by Gourav</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction ListItem(props) {\r\n    return (\r\n        <div className=\"list-item row jc-space-between\">\r\n            <span className={props.itemData.isComplete ? 'task-complete' : ''}\r\n                  onClick={() => props.markComplete(props.index)}>{props.itemData.isComplete ? `âœ… ` : ''}&nbsp;{props.itemData?.description}</span>\r\n            <img className=\"delete-icon\" src={trash} alt=\"delete-task\"\r\n                 onClick={() => props.deleteTask(props.index)}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n","module.exports = __webpack_public_path__ + \"static/media/trash.465dbcf2.svg\";"],"sourceRoot":""}